<?phpclass Zendformbuilder_SettingsController extends Pimcore_Controller_Action_Admin {    public $languages = null;    public function init() {        parent::init();//        // check permissions////        $notRestrictedActions = array("get-tree");////        if (!in_array($this->_getParam("action"), $notRestrictedActions)) {////            if (!$this->getUser()->isAllowed("classes")) {////////                $this->_redirect("/admin/login");////                die();////            }////        }    }    public function getTreeAction() {        $mainList = new Formbuilder_Formbuilder();        $mains = $mainList->read();        $mainItems = array();        foreach ($mains as $mainItem) {            $mainItems[] = array(                "id" => $mainItem->id,                "text" => $mainItem->name,                "icon" => ""            );        }        $this->_helper->json($mainItems);    }    public function getAction() {        $id = $this->_getParam("id");        if (file_exists(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/main_" . $id . ".json")) {            $config = new Zend_Config_Json(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/main_" . $id . ".json");            $data = $config->toArray();            $this->_helper->json($data);        } else {            $this->_helper->json(null);        }    }    public function addAction() {        $table = new Formbuilder_Formbuilder();        $name = $this->correctClassname($this->_getParam("name"));        $id = $table->create($name);        $settings = array(            "id" => $id,            "name" => $name        );        if (!is_dir(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/")) {            mkdir(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/");        }        if (file_exists(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/main_" . $id . ".json")) {            unlink(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/main_" . $id . ".json");        }        $config = new Zend_Config($settings, true);        $writer = new Zend_Config_Writer_Json(array(                    "config" => $config,                    "filename" => PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/main_" . $id . ".json"                ));        $writer->write();        $this->removeViewRenderer();    }    public function deleteAction() {        $id = $this->_getParam("id");        $table = new Formbuilder_Formbuilder();        $table->delete(intval($id));        if (file_exists(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/main_" . $id . ".json")) {            unlink(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/main_" . $id . ".json");        }        $this->removeViewRenderer();    }    public function saveAction() {        $id = $this->_getParam("id");        $table = new Formbuilder_Formbuilder();        $name = $table->getName($id);        $configuration = Zend_Json::decode($this->_getParam("configuration"));        $values = Zend_Json::decode($this->_getParam("values"));        if ($values["name"] != $name) {            $values["name"] = $this->correctClassname($values["name"]);            $table = new Formbuilder_Formbuilder();            $table->rename($id, $values["name"]);        }        if (!is_dir(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/")) {            mkdir(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/");        }        if (file_exists(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/main_" . $id . ".json")) {            unlink(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/main_" . $id . ".json");        }        $settings = $values;        $settings["mainDefinitions"] = $configuration;        $config = new Zend_Config($settings, true);        $writer = new Zend_Config_Writer_Json(array(                    "config" => $config,                    "filename" => PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/main_" . $id . ".json"                ));        $writer->write();        $builder = new Formbuilder_Builder();        $builder->setDatas($config->toArray());        $builder->buildForm($id);        $this->removeViewRenderer();    }    public function importAction() {        $data = file_get_contents($_FILES["Filedata"]["tmp_name"]);        $encoding = Pimcore_Tool_Text::detectEncoding($data);        if ($encoding) {            $data = iconv($encoding, "UTF-8", $data);        }        if (!is_dir(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/")) {            mkdir(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/");        }        if (!is_dir(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/import/")) {            mkdir(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/import/");        }        $importFile = PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/import/import_" . $this->_getParam("id");        file_put_contents($importFile, $data);        chmod($importFile, 0766);        $this->disableViewAutoRender();        $res = array();        $res["success"] = true;        echo \Zend_Json::encode(array(            "success" => true,            "msg" => $res["success"] ? "Success" : "Error",        ));    }    public function getimportAction() {        $id = $this->_getParam("id");        if (file_exists(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/import/import_" . $id)) {            $config = new Zend_Config_Json(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/import/import_" . $id);            unlink(PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/import/import_" . $id);            $data = $config->toArray();            unset($data["name"]);            unset($data["id"]);            $this->_helper->json($data);        } else {            $this->_helper->json(null);        }    }    public function getexportfileAction() {                    $id = $this->_getParam("id");            $name = $this->_getParam("name");                    if (is_numeric($id)) {            $exportName = "export_" . $name;            $exportFile = PIMCORE_PLUGINS_PATH . "/Zendformbuilder/data/main_" . $id . ".json";            $this->getResponse()->setHeader("Content-Type", "application/json", true);            $this->getResponse()->setHeader("Content-Disposition", 'attachment; filename="form_' . $exportName . '.json"');            echo file_get_contents($exportFile);        }        $this->removeViewRenderer();        //TODO        //unlink($exportArchive);    }        public function checkpathAction(){        $path = $this->_getParam("path");        if (is_dir($path)) {            $this->_helper->json(array(            "success" => true        ));        } else {            $this->_helper->json(array(            "success" => false        ));        }    }    protected function correctClassname($name) {        $tmpFilename = $name;        $validChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";        $filenameParts = array();        for ($i = 0; $i < strlen($tmpFilename); $i++) {            if (strpos($validChars, $tmpFilename[$i]) !== false) {                $filenameParts[] = $tmpFilename[$i];            }        }        return implode("", $filenameParts);    }}